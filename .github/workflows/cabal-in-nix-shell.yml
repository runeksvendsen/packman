name: Build & test in nix-shell

on:
  push:
  pull_request:

jobs:
  build_test:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          install_url: https://releases.nixos.org/nix/nix-2.20.5/install
          extra_nix_config: |
            substituters = https://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            system-features = benchmark big-parallel kvm nixos-test

      - name: Cache cabal files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.os }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
          restore-keys: ${{ runner.os }}-${{ matrix.os }}-

      - name: Test nix-shell # test that the Nix shell actually works
        run: nix-shell --run 'echo $PATH; ls -l $(which ghc); ls -l $(which cabal); ghc --version; cabal --version; type cabal'

      - name: Run 'cabal update'
        run: nix-shell --run 'cabal update'

      - name: Build library
        run: nix-shell --run 'cabal build lib:packman'

      - name: Build tests
        run: nix-shell --run 'cabal build --enable-tests'

      - name: Run tests
        run: nix-shell --run 'cabal test --test-show-details direct' # "--test-show-details direct" makes cabal print test suite output to terminal
